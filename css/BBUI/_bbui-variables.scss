

// @name variables

// @description

// This file is the key to everything. Nearly all of these SASS maps generate CSS
// classes based on their key-value pairs.

/*

@example

$font-size: (

    "s":    0.9rem,

    "m":    1.2rem,

    "l":    1.7rem

);

*/

// Our createClassesFromMap() mixin will loop through each key in the $font-size map and create a class based on the value. This is powerful because it makes creating markup usable classes very easy, as well as values we can fetch in our SASS file using SASS's map-get function.





/*------------------------------------*\
    #TYPE
\*------------------------------------*/



// Font Faces

$font-family: (

    "base":           unquote("Arial, sans-serif"),


    "serif":          unquote(""),

    "serif-alt":      unquote(""),


    "sans-serif":     unquote(""),

    "sans-serif-alt": unquote(""),


    "medium":         unquote(""),

    "medium-alt":     unquote(""),


    "bold":           unquote(""),

    "bold-alt":       unquote(""),


    "italic":         unquote(""),

    "italic-alt":     unquote(""),


    "mono":           unquote("")

);



// Font Sizes

$font-size: (

    "base": 1rem,

    "xs":   0.82rem,

    "s":    0.9rem,

    "m":    1.2rem,

    "l":    1.7rem,

    "xl":   2.3rem,

    "xxl":  3rem,

);



// Other Typography

$letter-spacing: (

    "none": 0,

    "s":    0.03em,

    "m":    0.06em,

    "l":    0.09em,

);



$line-height: (

    "none": 0,

    "s":    1.1,

    "m":    1.4,

    "l":    1.8,

);




/*------------------------------------*\
    #COLORS
\*------------------------------------*/



// Lighter variations of the $base-black color will
// be created.

$base-black: #000;



$color: (
    
    "black": $base-black,

    "grey-90": tint($base-black, 10%),

    "grey-75": tint($base-black, 25%),

    "grey-50": tint($base-black, 50%),

    "grey-40": tint($base-black, 60%),

    "grey-30": tint($base-black, 65%),

    "grey-25": tint($base-black, 70%),

    "grey-10": tint($base-black, 90%),

    "grey-05": tint($base-black, 95%),


    "blue": #0d7792,

    "light-blue": #d7e5e8,


    "green": #007e00,

    "light-green": #dff0d8,


    "red": #c40000,

    "light-red": #f2dede,


    "yellow": #ffff3b,

    "light-yellow": #fcf8e3,

);





/*------------------------------------*\
    #SPACING
\*------------------------------------*/



// This map's values are used to create margin
// and padding classes. They are also referenced
// throughout BBUI.

$spacing: (

    "auto": auto,

    "none": 0,

    "xs":   0.5rem,

    "s":    1rem,

    "m":    1.5rem,

    "l":    2rem,

    "xl":   3rem

);




/*------------------------------------*\
    #MEDIA-QUERIES
\*------------------------------------*/



// WARNING: Adding too many media queries here will
// dramatically increase the file size. Please check 
// the minified file size if you are adding additional
// media queries.

$media-query: (
    
    "s":  unquote("(min-width: 600px)"),

    "m":  unquote("(min-width: 1000px)"),

    "l":  unquote("(min-width: 1300px)"),

    "xl": unquote("(min-width: 1500px)")

);




/*------------------------------------*\
    #Z-INDEX
\*------------------------------------*/



$z-index: (

    "negative":      -1,

    "base":          1,

    "header":        10,

    "overlay":       20,


    "drawer":        15,

    "drawerOverlay": 13,


    "max":           9999

);




/*------------------------------------*\
    #RULES & BORDERS
\*------------------------------------*/



// Used for borders and HR elements.

$line-width: (

    "none": 0,

    "s":    1px,

    "m":    2px,

    "l":    3px

);



$border-radius: (

    "none": 0,

    "s":    2px,

    "m":    4px,

    "l":    6px,

    "half": 50%

);





/*------------------------------------*\
    #CSS3
\*------------------------------------*/



// All cubic-bezier transitions are easeInOut
// See: http://easings.net/

$transition-type: (

    "linear": unquote("linear"),

    "sine":   unquote("cubic-bezier(0.445, 0.05, 0.55, 0.95)"),

    "quad":   unquote("cubic-bezier(0.455, 0.03, 0.515, 0.955)"),

    "cubic":  unquote("cubic-bezier(0.645, 0.045, 0.355, 1)"),

    "quart":  unquote("cubic-bezier(0.77, 0, 0.175, 1)"),

    "quint":  unquote("cubic-bezier(0.86, 0, 0.07, 1)"),

    "expo":   unquote("cubic-bezier(1, 0, 0, 1)"),

    "circ":   unquote("cubic-bezier(0.785, 0.135, 0.15, 0.86)"),

    "back":   unquote("cubic-bezier(0.68, -0.55, 0.265, 1.55)")
    
);



$transition-speed: (
    
    "none":       0s,

    "extra-slow": 1s,

    "slow":       0.6s,

    "medium":     0.4s,

    "fast":       0.25s,

    "extra-fast": 0.10s
    
);




/*------------------------------------*\
    #DRAWERS
\*------------------------------------*/



$drawer: (

    "width": 320px,

    "padding": map-get($spacing, "m"),

    "overlayColor": fade-out($base-black, 0.5)

);





/*------------------------------------*\
    #PAGE-CONTENT
\*------------------------------------*/



// A CSS class (.page-content-max-width)
// will be created based on this value.

$page-content-max-width: 1000px;





/*------------------------------------*\
    #GENERATED CLASSES
\*------------------------------------*/



// These values are less likely to be modifed 
// we'll put them at the bottom of the file.

$display: (
    
    "block":        block,

    "inline-block": inline-block,

    "none":         none,

    "table":        table,

    "table-cell":   table-cell,

    "flex":         flex

);





$text-align: (

    "left":   left,

    "right":  right,

    "center": center
    
);



$text-transform: (

    "lowercase":  lowercase,

    "capitalize": capitalize,

    "uppercase":  uppercase,

    "none":       none
    
);



$text-decoration: (

    "none":      none,

    "underline": underline,

    "strike":    line-through

);



$align-items: (

    "center":     center,

    "flex-end":   flex-end,

    "flex-start": flex-start,

    "baseline":   baseline

);



$flex-wrap: (

    "wrap":   wrap,

    "nowrap": nowrap

);



$flex-direction: (

    "row":    row,

    "column": column

);



$justify-content: (

    "flex-end":      flex-end,

    "flex-start":    flex-start,

    "center":        center,

    "space-around":  space-around,

    "space-between": space-between

);



$list-style: (

    "none":    none,

    "square":  square,

    "disc":    disc,

    "decimal": decimal

);



$pointer-events: (

    "none": none,

    "auto": auto

);



$cursor: (

    "zoom-in":  zoom-in,

    "zoom-out": zoom-out,

    "pointer":  pointer

);



$border-style: (

    "none":   none,

    "solid":  solid,

    "dotted": dotted,

    "dashed": dashed

);



$sizes: (

    "auto": auto,

    "16":   16.667%,

    "20":   20%,

    "25":   25%,

    "33":   33.33%,

    "50":   50%,

    "66":   66.66%,

    "75":   75%,

    "100":  100%

);



$overflow: (
    
    "auto":   auto,

    "scroll": scroll,

    "hidden": hidden

);



$vertical-align: (
    
    "top":    top,

    "bottom": bottom,

    "middle": middle

);



$float: (

    "none":  none,
    
    "left":  left,

    "right": right

);



$white-space: (

    "nowrap": nowrap,

    "pre":    pre    
    
);


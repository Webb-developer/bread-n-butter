/*
@name variables

@guide
Place any and all variables here, with minimal exception.

@description
Nearly all of the SASS maps generate CSS classes based on their key-value pairs.
Our createClassesFromMap() mixin will loop through each key in a given map and create a class based on the value. This is powerful because it makes creating markup usable classes very easy, as well as values we can fetch in our SASS file using SASS's map-get function.
NOTE: deep maps cannot generate classes. They can only be fetched using the map-deep-get() function. See bbui-functions for more on these mixins/functions.

@example
$font-size: (
    "s":    0.9rem,
    "m":    1.2rem
);

Will produce:

.font-size--s{
    font-size: 0.9rem;
}
.font-size--m{
    font-size: 1.2rem;
}
*/





/*------------------------------------*\
    #MEDIA-QUERIES
\*------------------------------------*/



/*
@description
WARNING: Adding too many media queries here will
dramatically increase the file size. Please check 
the minified file size if you are adding additional
media queries.
*/

$media-query: (
    
    "s":  unquote("(min-width: 600px)"),

    "m":  unquote("(min-width: 900px)"),

    "l":  unquote("(min-width: 1200px)"),

    "xl": unquote("(min-width: 1500px)")

);





/*------------------------------------*\
    #CONFIG
\*------------------------------------*/



/*
@description
Define the breakpoint in which you decide
you've moved from mobile to a desktop. Useful
for when you have multiple fixed site headers with different
heights. The $header map will use this breakpoint to change
the .page-content margin from mobile to desktop offset when
$header => "isFixed" == true.
*/

$mobileToDesktopBreakPoint: map-get($media-query, "m");


$header: (
    
    // Useful when you need to push your page content down
    // due to a fixed header.
    "isFixed": true,
    
    // Push the .page-content down by this amount
    // for mobile and desktop. See $mobileToDesktopBreakPoint
    // for additional info.
    "height": (
        "mobile": 50px,
        "desktop": 75px
    )

);





/*------------------------------------*\
    #TYPE
\*------------------------------------*/



$font-family: (

    "base":           unquote("Georgia"),

    "serif":          unquote(""),

    "sans-serif":     unquote(""),

    "light":          unquote(""),

    "bold":           unquote(""),

    "italic":         unquote(""),

);



$font-size: (

    "base": 1rem,

    "xs":   0.82rem,

    "s":    0.9rem,

    "m":    1.2rem,

    "l":    1.7rem,

    "xl":   2.3rem,

    "xxl":  3rem,

);



$letter-spacing: (

    "none": 0,

    "s":    0.03em,

    "m":    0.06em,

    "l":    0.09em,

);



$line-height: (

    "s":    1.1,

    "m":    1.4,

    "l":    1.6,

);




/*------------------------------------*\
    #SPACING
\*------------------------------------*/



/*
@description
This map's values are used to create margin
and padding classes. They are also referenced
throughout BBUI.
*/

$spacing: (

    "auto": auto,

    "none": 0,

    "xs":   0.5rem,

    "s":    1rem,

    "m":    1.5rem,

    "l":    2rem,

    "xl":   3rem

);





/*------------------------------------*\
    #COLORS
\*------------------------------------*/



/*
Lighter variations of the 
$base-black color will be created.
*/

$base-black: #000;

$base-white: #fff;


$color: (
    
    "black": $base-black,

    "white": $base-white,


    "grey-90": lighten($base-black, 10%),

    "grey-75": lighten($base-black, 25%),

    "grey-50": lighten($base-black, 50%),

    "grey-40": lighten($base-black, 60%),

    "grey-30": lighten($base-black, 65%),

    "grey-20": lighten($base-black, 70%),

    "grey-10": lighten($base-black, 90%),

    "grey-05": lighten($base-black, 95%),


    "green":       #007e00,

    "light-green": #dff0d8,


    "red":       #c40000,

    "light-red": #f2dede,


    "yellow":       #ffff3b,

    "light-yellow": #fcf8e3,

);



/*------------------------------------*\
    #SIZES
\*------------------------------------*/



/*
@description
This map's values are used to create width
and height classes.
*/

$sizes: (

    "auto": auto,

    "20":   20%,

    "25":   25%,

    "33":   33.33%,

    "50":   50%,

    "66":   66.66%,

    "75":   75%,

    "80":   80%,

    "100":  100%

);




/*------------------------------------*\
    #RULES & BORDERS
\*------------------------------------*/



/*
Used for border widths
*/

$line-width: (

    "s":    1px,

    "m":    2px,

    "l":    3px

);



$border-radius: (

    "none": 0,

    "s":    1px,

    "m":    2px,

    "l":    4px

);





/*------------------------------------*\
    #OBJECTS
\*------------------------------------*/



$drawer: (

    "width": 320px,

    "padding": map-get($spacing, "m"),

    "overlayColor": fade-out($base-black, 0.5)

);



$button: (
    
    // All non-themed buttons have a default
    // transparent color border.
    "border-width": 1px,

    "base": (
        "height": 35px,
        "line-height": 35px,
        "padding": 0 1.2rem
    ),


    "short": (
        "height": 25px,
        "line-height": 25px
    ),

    "tall": (
        "height": 45px,
        "line-height": 45px
    ),


    "wide": (
        "padding": 0 2rem
    ),

    "narrow": (
        "padding": 0 0.6rem
    )

);



/*
Define some base titles.
*/

$title: (
    
    "m": (
        "font-family": map-get($font-family, "bold"),
        "font-size": map-get($font-size, "m"),
        "font-weight": normal,
        "letter-spacing": inherit,
        "line-height": map-get($line-height, "s")
    ),

    "l": (
        "font-family": map-get($font-family, "bold"),
        "font-size": map-get($font-size, "l"),
        "font-weight": normal,
        "letter-spacing": inherit,
        "line-height": map-get($line-height, "s")
    ),

    "xl": (
        "font-family": map-get($font-family, "bold"),
        "font-size": map-get($font-size, "xl"),
        "font-weight": normal,
        "letter-spacing": inherit,
        "line-height": map-get($line-height, "s")
    ),

    "xxl": (
        "font-family": map-get($font-family, "bold"),
        "font-size": map-get($font-size, "xxl"),
        "font-weight": normal,
        "letter-spacing": inherit,
        "line-height": map-get($line-height, "s")
    )

);



$modal:(
    
    "padding": map-get($spacing, "s"),

    "background-color": fade-out(map-get($color, "black"), 0.5),

    "inner":(
        "max-width": 500px,
        "background-color": #fff,
        "padding": map-get($spacing, "m")
    )
    
);



/*
@description
This is a hover triggered overlay. See .overlay
in bbui-objects.
*/

$overlay:(
    
    "padding": 2rem,

    // Offset from all corners
    "offset": 0,

    "background-color": rgba(255,255,255,0.85)

);



/*
@description
Hamburger icon
*/

$hamburger:(

    "width": 30px,

    "padding": 1rem,

    "line":(
        "background-color": map-get($color, "black"),
        "height": 2px,
        "spacing": 4px
    )

);



$close-icon:(

    "padding": 10px,

    "font-size": map-get($font-size, "l"),

    "color": map-get($color, "black"),

    "icon":(
        "symbol": "Ã—",
        "line-height": 0.558em
    )

);



$hr: (

    "height": map-get($line-width, "s"),

    "background-color": map-get($color, "grey-20"),
    
    // Top and bottom
    "margin": 0.4rem,
    
    "max-width": none

);



$dropdown: (

    "max-height": 300px  

);





/*------------------------------------*\
    #Z-INDEX
\*------------------------------------*/



$z-index: (

    "negative":      -1,

    "base":          1,

    "header":        10,

    "overlay":       20,


    "drawer":        15,

    "drawerOverlay": 13,


    "max":           9999

);




/*------------------------------------*\
    #CSS3
\*------------------------------------*/



/*
@description
All cubic-bezier transitions are easeInOut
See: http://easings.net/
*/

$transition-type: (

    "linear": unquote("linear"),

    "sine":   unquote("cubic-bezier(0.445, 0.05, 0.55, 0.95)"),

    "quad":   unquote("cubic-bezier(0.455, 0.03, 0.515, 0.955)"),

    "cubic":  unquote("cubic-bezier(0.645, 0.045, 0.355, 1)"),

    "quart":  unquote("cubic-bezier(0.77, 0, 0.175, 1)"),

    "quint":  unquote("cubic-bezier(0.86, 0, 0.07, 1)"),

    "expo":   unquote("cubic-bezier(1, 0, 0, 1)"),

    "circ":   unquote("cubic-bezier(0.785, 0.135, 0.15, 0.86)"),

    "back":   unquote("cubic-bezier(0.68, -0.55, 0.265, 1.55)")
    
);



$transition-speed: (
    
    "none":       0s,

    "extra-slow": 1s,

    "slow":       0.6s,

    "medium":     0.3s,

    "fast":       0.2s,

    "extra-fast": 0.1s
    
);





/*------------------------------------*\
    GENERATED CLASSES
\*------------------------------------*/



/*
@name generated classes

@description
These values are less likely to be modifed 
we'll put them at the bottom of the file.
*/



$display: (
    
    "block":        block,

    "inline-block": inline-block,

    "none":         none,

    "table":        table,

    "table-cell":   table-cell,

    "flex":         flex

);





$text-align: (

    "left":   left,

    "right":  right,

    "center": center
    
);



$font-weight: (

    "300": 300,

    "500": 500,

    "700": 700    

);



$text-transform: (

    "lowercase":  lowercase,

    "capitalize": capitalize,

    "uppercase":  uppercase,

    "none":       none
    
);



$text-decoration: (

    "none":      none,

    "underline": underline,

    "strike":    line-through

);



$align-items: (

    "center":     center,

    "flex-end":   flex-end,

    "flex-start": flex-start,

    "baseline":   baseline

);



$flex-wrap: (

    "wrap":   wrap,

    "nowrap": nowrap

);



$flex-direction: (

    "row":    row,

    "column": column

);



$justify-content: (

    "flex-end":      flex-end,

    "flex-start":    flex-start,

    "center":        center,

    "space-around":  space-around,

    "space-between": space-between

);



$list-style: (

    "none":    none,

    "square":  square,

    "disc":    disc,

    "decimal": decimal

);



$pointer-events: (

    "none": none,

    "auto": auto

);



$cursor: (

    "zoom-in":  zoom-in,

    "zoom-out": zoom-out,

    "pointer":  pointer

);



$border-style: (

    "solid":  solid,

    "dotted": dotted,

    "dashed": dashed

);



$overflow: (
    
    "auto":   auto,

    "scroll": scroll,

    "hidden": hidden

);



$vertical-align: (
    
    "top":    top,

    "bottom": bottom,

    "middle": middle

);



$float: (

    "none":  none,
    
    "left":  left,

    "right": right

);



$white-space: (

    "nowrap": nowrap,

    "pre":    pre    
    
);


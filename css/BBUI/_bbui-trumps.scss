/*------------------------------------*\
    #TYPE
\*------------------------------------*/



@include createClassesFromMap(font-family, font-family, $font-family);



@include createClassesFromMap(letter-spacing, letter-spacing, $letter-spacing);



@include createClassesFromMap(font-size, font-size, $font-size);



@include createClassesFromMap(line-height, line-height, $line-height);



@include createClassesFromMap(color, color, $color);



@include createClassesFromMap(background-color, background-color, $color);



@include createClassesFromMap(text-align, text-align, $text-align);



@include createClassesFromMap(text-decoration, text-decoration, $text-decoration);



@include createClassesFromMap(text-transform, text-transform, $text-transform);




/*------------------------------------*\
    #LISTS
\*------------------------------------*/



@include createClassesFromMap(list-style, list-style, $list-style);






/*------------------------------------*\
    #CSS3
\*------------------------------------*/



.optimize-transition{
    transform: translateZ(0) !important;
}



.rotate--90{
    transform: rotate(90deg) !important;
}


.rotate--180{
    transform: rotate(180deg) !important;
}


.rotate---90{
    transform: rotate(-90deg) !important;
}


.rotate---180{
    transform: rotate(-180deg) !important;
}



@include createClassesFromMap(transition-duration, transition-speed, $transition-speed);


@include createClassesFromMap(transition-timing-function, transition-type, $transition-type);




/*------------------------------------*\
    #PADDING
\*------------------------------------*/



@include createClassesFromMap(padding, padding, $spacing);

    @include createMQClassesFromMap(padding, padding, $spacing);



@include createClassesFromMap(padding-left, padding-left, $spacing);

   @include createMQClassesFromMap(padding-left, padding-left, $spacing);



@include createClassesFromMap(padding-right, padding-right, $spacing);

   @include createMQClassesFromMap(padding-right, padding-right, $spacing);



@include createClassesFromMap(padding-top, padding-top, $spacing);

    @include createMQClassesFromMap(padding-top, padding-top, $spacing);



@include createClassesFromMap(padding-bottom, padding-bottom, $spacing);

   @include createMQClassesFromMap(padding-bottom, padding-bottom, $spacing);





/*------------------------------------*\
    #MARGIN
\*------------------------------------*/



.margin-left--auto{
    margin-left: auto !important;
}


.margin-right--auto{
    margin-right: auto !important;
}


.margin-top--auto{
    margin-top: auto !important;
}


.margin-bottom--auto{
    margin-bottom: auto !important;
}


@include createClassesFromMap(margin, margin, $spacing);

    @include createMQClassesFromMap(margin, margin, $spacing);


// Margin #Left

@include createClassesFromMap(margin-left, margin-left, $spacing);

    @include createMQClassesFromMap(margin-left, margin-left, $spacing);


// Margin #Right

@include createClassesFromMap(margin-right, margin-right, $spacing);

    @include createMQClassesFromMap(margin-right, margin-right, $spacing);


// Margin #Top

@include createClassesFromMap(margin-top, margin-top, $spacing);

    @include createMQClassesFromMap(margin-top, margin-top, $spacing);


// Margin #Bottom

@include createClassesFromMap(margin-bottom, margin-bottom, $spacing);

    @include createMQClassesFromMap(margin-bottom, margin-bottom, $spacing);




    
/*------------------------------------*\
    #HEIGHTS
\*------------------------------------*/



.vh--full{
    height: 100vh !important;
}


.height--auto{
    height: auto;
}


@include createNumberClasses(height, height, 4);

    @include createMQNumberClasses(height, height, 4);



// #Max Heights

@include createIncrementalNumberClasses(max-height, max-height, 50, 15);




/*------------------------------------*\
    #WIDTHS
\*------------------------------------*/



.vw--full{
    width: 100vw !important;
}


.width--auto{
    width: auto;
}


@include createNumberClasses(width, width, 4);

    @include createMQNumberClasses(width, width, 4);



// #Max Widths

@include createIncrementalNumberClasses(max-width, max-width, 50, 15);





/*------------------------------------*\
    #DISPLAYS
\*------------------------------------*/



.hidden{
    display: none !important;
    speak: none;
}


.display--none{
    display: none !important;
}


.display--inline{
    display: inline !important;
}


.display--inline-block{
    display: inline-block !important;
}


.display--block{
    display: block !important;
}



.display--table{
    display: table !important;
}


.display--table-cell{
    display: table-cell !important;
}



.display--flex{
    display: flex !important;
}



.flex-wrap--wrap{
    flex-wrap: wrap !important;
}


.flex-wrap--nowrap{
    flex-wrap: nowrap !important;
}


.flex-direction--row{
    flex-direction: row !important;
}


.flex-direction--column{
    flex-direction: column !important;
}



.align-items--center{
    align-items: center !important;
}


.align-items--end{
    align-items: flex-end !important;
}


.align-items--start{
    align-items: flex-start !important;
}


.align-items--baseline{
    align-items: baseline !important;
}



.justify--end{
    justify-content: flex-end !important;
}


.justify--end{
    justify-content: flex-start !important;
}


.justify--center{
    justify-content: center !important;
}


.justify--around{
    justify-content: space-around !important;
}


.justify--between{
    justify-content: space-between !important;
}



@include createMQClassesFromMap(display, display, $display);





/*------------------------------------*\
    #VISIBILITY
\*------------------------------------*/



.visible{
    visibility: visible !important;
}


.invisible{
    visibility: hidden !important;
}



.opaque{
    opacity: 1 !important;
}


.transparent{
    opacity: 0 !important;
}





/*------------------------------------*\
    #POSITIONS
\*------------------------------------*/



.relative{
    position: relative !important;
}



.fixed{
    position: fixed !important;
}


.fixed--to-top{
    position: fixed !important;
    top: 0 !important;
}


.fixed--to-bottom{
    position: fixed !important;
    bottom: 0 !important;
}


.fixed--to-top-corners{
    position: fixed !important;
    top:   0 !important;
    left:  0 !important;
    right: 0 !important;
}


.fixed--to-bottom-corners{
    position: fixed !important;
    bottom:   0 !important;
    left:     0 !important;
    right:    0 !important;
}


.fixed--cover{
    position: fixed !important;
    top:    0 !important;
    left:   0 !important;
    right:  0 !important;
    bottom: 0 !important;
}



.absolute{
    position: absolute !important;
}


.absolute--to-top{
    position: absolute !important;
    top: 0 !important;
}


.absolute--to-bottom{
    position: absolute !important;
    bottom: 0 !important;
}


.absolute--to-top-corners{
    position: absolute !important;
    top:   0 !important;
    left:  0 !important;
    right: 0 !important;
}


.absolute--to-bottom-corners{
    position: absolute !important;
    bottom:   0 !important;
    left:     0 !important;
    right:    0 !important;
}


.absolute--cover{
    position: absolute !important;
    top:    0 !important;
    left:   0 !important;
    right:  0 !important;
    bottom: 0 !important;
}



.float--none{
    float: none !important;
}


.float--left{
    float: left !important;
}


.float--right{
    float: right !important;
}



.vertical-align--bottom{
    vertical-align: bottom !important;
}


.vertical-align--middle{
    vertical-align: middle !important;
}


.vertical-align--top{
    vertical-align: top !important;
}





/*------------------------------------*\
    #CONTAINMENT
\*------------------------------------*/



.overflow--hidden{
    overflow: hidden !important;
}


.overflow-x--hidden{
    overflow-x: hidden !important;
}


.overflow-y--hidden{
    overflow-y: hidden !important;
}



.overflow--auto{
    overflow: auto !important;
}


.overflow-x--auto{
    overflow-x: auto !important;
}


.overflow-y--auto{
    overflow-y: auto !important;
}



.overflow--scroll{
    overflow: scroll !important;
}


.overflow-x--scroll{
    overflow-x: scroll !important;
}


.overflow-y--scroll{
    overflow-y: scroll !important;
}



.overflow-touch{
    -webkit-overflow-scrolling: touch !important;
}



.white-space--nowrap{
    white-space: nowrap !important;
}


.white-space--pre{
    white-space: pre !important;
}





/*------------------------------------*\
    #CURSORS & #POINTERS
\*------------------------------------*/



@include createClassesFromMap(cursor, cursor, $cursor);



@include createClassesFromMap(pointer-events, pointer-events, $pointer-events);





/*------------------------------------*\
    #BORDERS
\*------------------------------------*/



@include createClassesFromMap(border-radius, border-radius, $border-radius);


@include createClassesFromMap(border-color, border-color, $color);


@include createClassesFromMap(border-width, border-width, $line-width);


@include createClassesFromMap(border-style, border-style, $border-style);



.border-style--none{
    border-style: none !important;
}


.border-style--solid{
    border-style: solid !important;
}


.border-style--dotted{
    border-style: dotted !important;
}


.border-style--dashed{
    border-style: dashed !important;
}





/*------------------------------------*\
    #IMAGES
\*------------------------------------*/



.background-size--cover{
    background-size: cover !important;
}


.background-size--contain{
    background-size: contain !important;
}



.background-repeat--no-repeat{
    background-repeat: no-repeat !important;
}


.background-repeat--repeat{
    background-repeat: repeat !important;
}





/*------------------------------------*\
    #MISC
\*------------------------------------*/



@include createClassesFromMap(z-index, z-index, $zIndex);



.hidden-scrollbar{

    &::-webkit-scrollbar{
        width:  0 !important;
        height: 0 !important;
    }

    &::-webkit-scrollbar-track{
        background: transparent !important;
    }

    &::-webkit-scrollbar-thumb {
        background: transparent !important;
    }

    &::-webkit-scrollbar-thumb:window-inactive{
        background: transparent !important;
    }
}





/*------------------------------------*\
    #CLEARFIX
\*------------------------------------*/



.clearfix:before,
.clearfix:after {
    content: "" !important;
    display: block !important;
}

.clearfix:after {
    clear: both !important;
}





/*------------------------------------*\
    #TABLES
\*------------------------------------*/



.table-fixed{
    table-layout: fixed !important;
}